name: Build
on:
  push:
    branches: main
    paths: editable/excerpt.html
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out the files in this repository
        uses: actions/checkout@v2
      - name: Downloading Java code used by this build
        run: wget --no-verbose https://ebookipedia.github.io/java/build.jar
      - name: Configuring user/email to be used for git commits
        run: |
          git config --global user.name "${USER_NAME}"
          git config --global user.email "${USER_NAME}@users.noreply.github.com"
        env:
          USER_NAME: ${{github.actor}}
      - name: Building docs/excerpt.html (from editable/excerpt.html) and detecting the URL and title of the mirrored article
        id: I
        run: |
          export GITHUB_OAUTH=${{secrets.GITHUB_TOKEN}}
          java -cp build.jar updated.Excerpt $GITHUB_REPOSITORY
          echo ::set-output name=title::$(<.java-generated/title)
          echo ::set-output name=url::$(<.java-generated/url)
      - name: Commiting docs/excerpt.html
        run: |
          git add docs/excerpt.html
          git commit -m "(automated) adapted from modified editable/excerpt.html"
      - name: Generating the epub version of the mirrored article if not generated yet
        id: II
        uses: andstor/file-existence-action@v1
        with:
          files: "${{steps.I.outputs.title}}.epub"
      - if: steps.II.outputs.files_exists == 'false'
        uses: ebookipedia/epub@main
        with:
          title: ${{steps.I.outputs.title}}
          url: ${{steps.I.outputs.url}}
      - name: Moving the downloaded epub to /docs and committing
        run: |
          export $EBOOK_TITLE="${{steps.I.outputs.title}}.epub"
          mv "$EBOOK_TITLE" docs
          git add "docs/$EBOOK_TITLE"
          git commit -m "(automated) directly generated by epub-press from ${{steps.I.outputs.url}}"
      - name: Pushing changes
        run: git push
